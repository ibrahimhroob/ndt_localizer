<launch>

  <arg name="Filter" default="true" />
  <arg name="raw_points_topic" default="/points_raw"/>
  <arg name="leaf_size" default="3.0" />
  <arg name="resolution" default="3.0" doc="The ND voxel grid resolution" />

  <!--- MapLoader -->   
  <arg name="roll" default="0.0" />
  <arg name="pitch" default="0.0" />
  <arg name="yaw" default="0.0" />
  <arg name="x" default="0.0" />
  <arg name="y" default="0.0" />
  <arg name="z" default="0.0" />
  <arg name="map" default="20120115/20120115_0s_333s_off_ground.pcd" />
  <arg name="pcd_path"  default="/home/ibrahim/iros22_data_and_stuff/nclt_pcd/$(arg map)"/> 


  <group if="$(arg Filter)">
    <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
    <!-- Run a passthrough filter to clean NaNs -->
    <node pkg="nodelet" type="nodelet" name="passthrough_x" args="load pcl/PassThrough pcl_manager" output="screen">
        <remap from="~input" to="$(arg raw_points_topic)" />
        <remap from="~output" to="/points_raw_filtered_x" />
        <rosparam>
        filter_field_name: x
        filter_limit_min: -20
        filter_limit_max: 20
        filter_limit_negative: False
        </rosparam>
    </node>
    <node pkg="nodelet" type="nodelet" name="passthrough_y" args="load pcl/PassThrough pcl_manager" output="screen">
        <remap from="~input" to="/points_raw_filtered_x" />
        <remap from="~output" to="/points_raw_filtered_xy" />
        <rosparam>
        filter_field_name: y
        filter_limit_min: -20
        filter_limit_max: 20
        filter_limit_negative: False
        </rosparam>    
    </node>


  </group>


  <arg name="points_topic" default="/points_raw_filtered_xy"/>

  <arg name="map_topic" default="/points_map"/>

  <node pkg="ndt_localizer" type="map_loader"    name="map_loader"    output="screen">
    <param name="pcd_path" value="$(arg pcd_path)"/>
    <param name="map_topic" value="$(arg map_topic)"/>
    <param name="roll" value="$(arg roll)" />
    <param name="pitch" value="$(arg pitch)" />
    <param name="yaw" value="$(arg yaw)" />
    <param name="x" value="$(arg x)" />
    <param name="y" value="$(arg y)" />
    <param name="z" value="$(arg z)" />
  </node>

  <arg name="sync" default="false" />
  <arg name="node_name" default="voxel_grid_filter" />
  <arg name="output_log" default="false" />

  <node pkg="ndt_localizer" name="$(arg node_name)" type="$(arg node_name)" output="screen">
    <param name="points_topic" value="$(arg points_topic)" />
    <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
    <param name="output_log" value="$(arg output_log)" />
    <param name="leaf_size" value="$(arg leaf_size)" />
  </node>

  <!-- tf -->
  <arg name="base_frame" default="base_link" doc="Vehicle reference frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_map" args="0 0 0 0 0 0 world map" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="localizer_to_base_link" args="0 0 1.6 0 0 0 base_link velodyne"/>

  <arg name="input_sensor_points_topic" default="/filtered_points" doc="Sensor points topic"/>
  <arg name="input_initial_pose_topic" default="/ekf_pose_with_covariance" doc="Initial position topic to align" />
  <arg name="input_map_points_topic" default="/points_map" doc="Map points topic" />
  <arg name="output_pose_topic" default="ndt_pose" doc="Estimated self position" />
  <arg name="output_pose_with_covariance_topic" default="ndt_pose_with_covariance" doc="Estimated self position with covariance" />
  <arg name="output_diagnostics_topic" default="diagnostics" doc="Diagnostic topic" />
  <arg name="trans_epsilon" default="0.05" doc="The maximum difference between two consecutive transformations in order to consider convergence" />
  <arg name="step_size" default="0.1" doc="The newton line search maximum step length" />
  <arg name="max_iterations" default="30.0" doc="The number of iterations required to calculate alignment" />
  <arg name="converged_param_transform_probability" default="3.0" doc="" />

  <node pkg="ndt_localizer" type="ndt_localizer_node" name="ndt_localizer_node" output="screen">

    <remap from="points_raw" to="$(arg input_sensor_points_topic)" />
    <remap from="ekf_pose_with_covariance" to="$(arg input_initial_pose_topic)" />
    <remap from="pointcloud_map" to="$(arg input_map_points_topic)" />
    <remap from="ndt_pose" to="$(arg output_pose_topic)" />
    <remap from="ndt_pose_with_covariance" to="$(arg output_pose_with_covariance_topic)" />
    <remap from="diagnostics" to="$(arg output_diagnostics_topic)" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="trans_epsilon" value="$(arg trans_epsilon)" />
    <param name="step_size" value="$(arg step_size)" />
    <param name="resolution" value="$(arg resolution)" />
    <param name="max_iterations" value="$(arg max_iterations)" />
    <param name="converged_param_transform_probability" value="$(arg converged_param_transform_probability)" />
  </node>

  <include file="$(find ndt_localizer)/launch/lexus.launch" />

  <!--- Run Rviz-->
  <node pkg="rviz" type="rviz" name="rviz_ndt" args="-d $(find ndt_localizer)/cfgs/rock-auto.rviz" />

</launch>

